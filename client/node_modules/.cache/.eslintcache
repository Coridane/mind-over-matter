[{"/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/index.js":"1","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/App.js":"2","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/pages/Login.js":"3","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/pages/Home.js":"4","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/pages/gamePage.js":"5","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/components/payment/checkoutForm.jsx":"6","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/components/game/Game.js":"7","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/components/game/card.js":"8","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/utils/mutations.js":"9","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/components/index.js":"10","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/components/auth/authService.js":"11","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/styles/loginWidget.js":"12"},{"size":228,"mtime":1698349449225,"results":"13","hashOfConfig":"14"},{"size":1785,"mtime":1698790310629,"results":"15","hashOfConfig":"14"},{"size":3283,"mtime":1698790626096,"results":"16","hashOfConfig":"14"},{"size":4735,"mtime":1698788552479,"results":"17","hashOfConfig":"14"},{"size":556,"mtime":1698770076192,"results":"18","hashOfConfig":"14"},{"size":1843,"mtime":1698600621654,"results":"19","hashOfConfig":"14"},{"size":5487,"mtime":1698691565299,"results":"20","hashOfConfig":"14"},{"size":711,"mtime":1698624711976,"results":"21","hashOfConfig":"14"},{"size":524,"mtime":1698778477330,"results":"22","hashOfConfig":"14"},{"size":48,"mtime":1698349449224,"results":"23","hashOfConfig":"14"},{"size":1233,"mtime":1698775170877,"results":"24","hashOfConfig":"14"},{"size":844,"mtime":1698789400594,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1fb9ny1",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"29"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/index.js",[],[],["70"],"/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/App.js",["71","72","73","74"],[],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Game from './pages/gamePage';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport CheckoutForm from \"./components/payment/checkoutForm\";\nimport \"./components/payment/checkout.css\";\n\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink), \n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n\n\n  return (\n  \n    <ApolloProvider client={client}>\n      {/* mutation to take in information gathered in loggedOut state\n       */}\n      <Router>\n        <div className=\"flex-column justify-center align-center min-100-vh bg-primary\">\n          <Routes>\n            {/* if logged out -> render Login */}\n            <Route \n              path=\"/\" \n              element={<Login />}\n            />\n             {/* if logged in -> render Home */}\n            <Route \n              path=\"/home\" \n              element={<Home />}\n            />\n            <Route \n              path=\"/game\" \n              element={<Game />}\n            />\n          </Routes>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;",["75"],"/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/pages/Login.js",["76","77"],[],"/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/pages/Home.js",["78"],[],"/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/pages/gamePage.js",["79"],[],"import React from \"react\";\nimport Game from '../components/game/Game';\nconst sass = require('sass');\n\nfunction gamePage () {\n    return (\n    <div>\n        <div className= \"navbar\">\n            <h1 img=\"client/public/images/logo.png\">\n            </h1>\n        </div>\n        <div className= \"game-container\">\n            <p> Memory games are a great way to engage the brain in creative and interactive ways!\n            </p>\n            <div><Game/>\n            </div>\n            \n\n            \n        </div>\n    </div>\n    )\n}\n\nexport default gamePage;","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/components/payment/checkoutForm.jsx",["80","81"],[],"import React, { useState } from 'react';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\n\nconst StripeAPIComponent = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [isPaymentSuccessful, setIsPaymentSuccessful] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      return;\n    }\n\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    });\n\n    if (error) {\n      setError(error.message);\n    } else {\n      // Send the paymentMethod.id to your server to complete the payment\n      // Replace with your server-side code to handle the payment\n      const paymentMethodId = paymentMethod.id;\n\n      // Example: Send the paymentMethodId to your server\n      // fetch('/your-server-endpoint', {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //   },\n      //   body: JSON.stringify({ paymentMethodId }),\n      // })\n      // .then(response => response.json())\n      // .then(data => {\n      //   if (data.success) {\n      //     setIsPaymentSuccessful(true);\n      //   } else {\n      //     setError(data.error);\n      //   }\n      // })\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Card details:\n          <CardElement />\n        </label>\n        <button type=\"submit\" disabled={!stripe}>\n          Pay\n        </button>\n      </form>\n      {error && <div className=\"error\">{error}</div>}\n      {isPaymentSuccessful && <div className=\"success\">Payment was successful!</div>}\n    </div>\n  );\n};\n\nexport default StripeAPIComponent;\n","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/components/game/Game.js",["82","83","84"],[],"import { useEffect, useState, useRef } from \"react\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  Button,\n  DialogTitle\n} from \"@material-ui/core\";\nimport Card from \"./card\";\nimport \"./game.scss\";\nimport \"./card.scss\";\nimport happyFace from \"../images/happy.png\"\nimport sadFace from \"../images/sad.png\";\nimport angryFace from \"../images/angry.png\";\nimport sleepyFace from \"../images/sleepy.png\";\nimport loveFace from \"../images/love.png\";\nimport sickFace from \"../images/sick.png\";\n\nconst sass = require('sass');\n\nconst uniqueCardsArray = [\n  {\n    type: \"Happy\",\n    image: happyFace\n  },\n  {\n    type: \"Sad\",\n    image: sadFace\n  },\n  {\n    type: \"Angry\",\n    image: angryFace\n  },\n  {\n    type: \"Sleepy\",\n    image: sleepyFace\n  },\n  {\n    type: \"Sick\",\n    image: sickFace\n  },\n  {\n    type: \"Love\",\n    image: loveFace\n  }\n];\n\nfunction shuffleCards(array) {\n  const length = array.length;\n  for (let i = length; i > 0; i--) {\n    const randomIndex = Math.floor(Math.random() * i);\n    const currentIndex = i - 1;\n    const temp = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temp;\n  }\n  return array;\n}\nexport default function App() {\n  const [cards, setCards] = useState(() =>\n    shuffleCards(uniqueCardsArray.concat(uniqueCardsArray))\n  );\n  const [openCards, setOpenCards] = useState([]);\n  const [clearedCards, setClearedCards] = useState({});\n  const [shouldDisableAllCards, setShouldDisableAllCards] = useState(false);\n  const [moves, setMoves] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const [bestScore, setBestScore] = useState(\n    JSON.parse(localStorage.getItem(\"bestScore\")) || Number.POSITIVE_INFINITY\n  );\n  const timeout = useRef(null);\n\n  const disable = () => {\n    setShouldDisableAllCards(true);\n  };\n  const enable = () => {\n    setShouldDisableAllCards(false);\n  };\n\n  const checkCompletion = () => {\n    if (Object.keys(clearedCards).length === uniqueCardsArray.length) {\n      setShowModal(true);\n      const highScore = Math.min(moves, bestScore);\n      setBestScore(highScore);\n      localStorage.setItem(\"bestScore\", highScore);\n    }\n  };\n\n  const evaluate = () => {\n    const [first, second] = openCards;\n    enable();\n    if (cards[first].type === cards[second].type) {\n      setClearedCards((prev) => ({ ...prev, [cards[first].type]: true }));\n      setOpenCards([]);\n      return;\n    }\n    // This is to flip the cards back after 500ms duration\n    timeout.current = setTimeout(() => {\n      setOpenCards([]);\n    }, 500);\n  };\n  const handleCardClick = (index) => {\n    if (openCards.length === 1) {\n      setOpenCards((prev) => [...prev, index]);\n      setMoves((moves) => moves + 1);\n      disable();\n    } else {\n      clearTimeout(timeout.current);\n      setOpenCards([index]);\n    }\n  };\n\n  useEffect(() => {\n    let timeout = null;\n    if (openCards.length === 2) {\n      timeout = setTimeout(evaluate, 300);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [openCards]);\n\n  useEffect(() => {\n    checkCompletion();\n  }, [clearedCards]);\n  const checkIsFlipped = (index) => {\n    return openCards.includes(index);\n  };\n\n  const checkIsInactive = (card) => {\n    return Boolean(clearedCards[card.type]);\n  };\n\n  const handleRestart = () => {\n    setClearedCards({});\n    setOpenCards([]);\n    setShowModal(false);\n    setMoves(0);\n    setShouldDisableAllCards(false);\n    // set a shuffled deck of cards\n    setCards(shuffleCards(uniqueCardsArray.concat(uniqueCardsArray)));\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h3>Play the Flip card game</h3>\n        <div>\n          Select two cards with same content consequtively to make them vanish\n        </div>\n      </header>\n      <div className=\"container\">\n        {cards.map((card, index) => {\n          return (\n            <Card\n              key={index}\n              card={card}\n              index={index}\n              isDisabled={shouldDisableAllCards}\n              isInactive={checkIsInactive(card)}\n              isFlipped={checkIsFlipped(index)}\n              onClick={handleCardClick}\n            />\n          );\n        })}\n      </div>\n      <footer>\n        <div className=\"score\">\n          <div className=\"moves\">\n            <span className=\"bold\">Moves:</span> {moves}\n          </div>\n          {localStorage.getItem(\"bestScore\") && (\n            <div className=\"high-score\">\n              <span className=\"bold\">Best Score:</span> {bestScore}\n            </div>\n          )}\n        </div>\n        <div className=\"restart\">\n          <Button onClick={handleRestart} color=\"primary\" variant=\"contained\">\n            Restart\n          </Button>\n        </div>\n      </footer>\n      <Dialog\n        open={showModal}\n        disableBackdropClick\n        disableEscapeKeyDown\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Hurray!!! You completed the challenge\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            You completed the game in {moves} moves. Your best score is{\" \"}\n            {bestScore} moves.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRestart} color=\"primary\">\n            Restart\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/components/game/card.js",[],[],"/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/utils/mutations.js",[],[],"/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/components/index.js",[],[],["85"],"/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/components/auth/authService.js",["86"],[],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","/Users/tobyhomedrive/bootcamp/mind-over-matter/client/src/styles/loginWidget.js",["87","88"],[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"95","line":8,"column":10,"nodeType":"93","messageId":"94","endLine":8,"endColumn":18},{"ruleId":"91","severity":1,"message":"96","line":10,"column":8,"nodeType":"93","messageId":"94","endLine":10,"endColumn":20},{"ruleId":"91","severity":1,"message":"97","line":13,"column":7,"nodeType":"93","messageId":"94","endLine":13,"endColumn":20},{"ruleId":"89","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":68,"column":18,"nodeType":"101","endLine":68,"endColumn":70},{"ruleId":"99","severity":1,"message":"100","line":94,"column":4,"nodeType":"101","endLine":94,"endColumn":51},{"ruleId":"102","severity":1,"message":"103","line":55,"column":13,"nodeType":"101","messageId":"104","endLine":55,"endColumn":89,"fix":"105"},{"ruleId":"91","severity":1,"message":"106","line":3,"column":7,"nodeType":"93","messageId":"94","endLine":3,"endColumn":11},{"ruleId":"91","severity":1,"message":"107","line":7,"column":31,"nodeType":"93","messageId":"94","endLine":7,"endColumn":53},{"ruleId":"91","severity":1,"message":"108","line":28,"column":13,"nodeType":"93","messageId":"94","endLine":28,"endColumn":28},{"ruleId":"91","severity":1,"message":"106","line":20,"column":7,"nodeType":"93","messageId":"94","endLine":20,"endColumn":11},{"ruleId":"109","severity":1,"message":"110","line":122,"column":6,"nodeType":"111","endLine":122,"endColumn":17,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":126,"column":6,"nodeType":"111","endLine":126,"endColumn":20,"suggestions":"114"},{"ruleId":"89","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":49,"column":1,"nodeType":"118","endLine":49,"endColumn":34},{"ruleId":"119","severity":1,"message":"120","line":6,"column":60,"nodeType":"121","messageId":"122","endLine":6,"endColumn":62},{"ruleId":"119","severity":1,"message":"120","line":17,"column":71,"nodeType":"121","messageId":"122","endLine":17,"endColumn":73},"no-new-object",["123"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Elements' is defined but never used.","'CheckoutForm' is defined but never used.","'stripePromise' is assigned a value but never used.",["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"124","text":"125"},"'sass' is assigned a value but never used.","'setIsPaymentSuccessful' is assigned a value but never used.","'paymentMethodId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'evaluate'. Either include it or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has a missing dependency: 'checkCompletion'. Either include it or remove the dependency array.",["127"],["123"],"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-object-constructor",[4625,4625]," rel=\"noreferrer\"",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [evaluate, openCards]",{"range":"132","text":"133"},"Update the dependencies array to be: [checkCompletion, clearedCards]",{"range":"134","text":"135"},[3026,3037],"[evaluate, openCards]",[3089,3103],"[checkCompletion, clearedCards]"]